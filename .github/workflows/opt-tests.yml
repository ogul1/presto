# An envar that signals to tests we are executing in the CI environment
# Required permissions
# Set job outputs to values from filter step
# For pull requests it's not necessary to checkout the code

name: Modified test
env:
  CONTINUOUS_INTEGRATION: true
  MAVEN_OPTS: -Xmx1024M -XX:+ExitOnOutOfMemoryError
  MAVEN_INSTALL_OPTS: -Xmx2G -XX:+ExitOnOutOfMemoryError
  MAVEN_FAST_INSTALL: -B -V --quiet -T 1C -DskipTests -Dair.check.skip-all --no-transfer-progress
    -Dmaven.javadoc.skip=true
  MAVEN_TEST: -B -Dair.check.skip-all -Dmaven.javadoc.skip=true -DLogTestDurationListener.enabled=true
    --no-transfer-progress --fail-at-end
  RETRY: .github/bin/retry
jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      codechange: ${{ steps.filter.outputs.codechange }}
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-changes.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/presto/presto', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |-
          codechange:
            - '!presto-docs/**'
    - run: touch optcd-3.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-changes
        path: /home/runner/inotifywait-log-changes.csv
    name: changes
  test:
    runs-on: ubuntu-latest
    needs: changes
    strategy:
      fail-fast: false
      matrix:
        modules:
        - :presto-tests -P presto-tests-execution-memory
        - :presto-tests -P presto-tests-general
        - :presto-tests -P ci-only-distributed-non-hash-gen
        - :presto-tests -P ci-only-tpch-distributed-queries
        - :presto-tests -P ci-only-local-queries
        - :presto-tests -P ci-only-distributed-queries
        - :presto-tests -P ci-only-aggregation-queries
        - :presto-tests -P ci-only-plan-determinism
        - :presto-tests -P ci-only-resource-manager
        - :presto-accumulo
        - :presto-cassandra -P test-cassandra-integration-smoke-test
        - :presto-hive
        - :presto-hive -P test-hive-materialized-queries
        - :presto-hive -P test-hive-materialized-aggregations
        - :presto-hive -P test-hive-recoverable-execution
        - :presto-hive -P test-hive-pushdown-filter-queries-basic
        - :presto-hive -P test-hive-pushdown-filter-queries-advanced
        - :presto-hive -P test-hive-repartitioning
        - :presto-hive -P test-hive-parquet
        - :presto-main
        - :presto-mongodb -P test-mongo-distributed-queries
        - :presto-redis -P test-redis-integration-smoke-test
        - :presto-elasticsearch
        - :presto-orc
        - :presto-thrift-connector
        - :presto-spark-base -P presto-spark-tests-smoke
        - :presto-spark-base -P presto-spark-tests-all-queries
        - :presto-spark-base -P presto-spark-tests-spill-queries
        - :presto-iceberg
    timeout-minutes: 80
    concurrency:
      group: ${{ github.workflow }}-test-${{ matrix.modules }}-${{ github.event.pull_request.number
        }}
      cancel-in-progress: true
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-test (${{ matrix.modules }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/presto/presto', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v4
      with:
        show-progress: false
    - run: touch optcd-3.txt
    - uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 8
    - run: touch optcd-4.txt
    - name: Cache local Maven repository
      id: cache-maven
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |-
          ${{ runner.os }}-maven-2-
    - run: touch optcd-5.txt
    - name: Populate maven cache
      run: ./mvnw de.qaware.maven:go-offline-maven-plugin:resolve-dependencies --no-transfer-progress
        && .github/bin/download_nodejs
    - run: touch optcd-6.txt
    - name: Maven Install
      run: |-
        export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
        ./mvnw install ${MAVEN_FAST_INSTALL} -am -pl $(echo '${{ matrix.modules }}' | cut -d' ' -f1)
    - run: touch optcd-7.txt
    - name: Maven Tests
      run: ./mvnw test ${MAVEN_TEST} -pl ${{ matrix.modules }}
    - run: touch optcd-8.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-test (${{ matrix.modules }})
        path: /home/runner/inotifywait-log-test (${{ matrix.modules }}).csv
    name: test (${{ matrix.modules }})
'on':
- push
- workflow_dispatch
